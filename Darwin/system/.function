# Mac OS only

## cat with SublimeText
scat () {
	subl -w -s $1 &
}

# `sdir` with no arguments opens the current directory in Sublime Text, otherwise
# opens the given location
sdir() {
	if [ $# -eq 0 ]; then
		subl .;
	else
		subl "$@";
	fi;
}

## SublimeText color folder diff
smerdiff() {
	path1=`realpath $1`
	path2=`realpath $2`
	subl --command "sublimerge_diff {\"left\": \"$path1/\", \"right\": \"$path2/\"}"
}

## Open man page as PDF
manpdf() {
	man -t "${1}" | open -f -a /Applications/Preview.app/ 
}

## My functions for OCR MacOS screenshots
OCR_ENG() {
	OCR_VAR=$RANDOM
	OCR_VAR_2=`echo $(($OCR_VAR+$RANDOM))`
	OCR_VAR_3=`echo $OCR_VAR_2`.txt
	convert -density 200 -units PixelsPerInch -type Grayscale +compress "$1" "$OCR_VAR"
	tesseract $OCR_VAR $OCR_VAR_2 -l eng
	cat $OCR_VAR_3 | pbcopy
	echo ' '
	echo '---------------------------------------------------------'
	echo ' '
	cat $OCR_VAR_3
	echo ' '
	echo '---------------------------------------------------------'
	rm -f $OCR_VAR $OCR_VAR_3
}

OCR_RUS() {
	OCR_VAR=$RANDOM
	OCR_VAR_2=`echo $(($OCR_VAR+$RANDOM))`
	OCR_VAR_3=`echo $OCR_VAR_2`.txt
	convert -density 200 -units PixelsPerInch -type Grayscale +compress "$1" "$OCR_VAR"
	tesseract $OCR_VAR $OCR_VAR_2 -l rus
	cat $OCR_VAR_3 | pbcopy
	echo ' '
	echo '---------------------------------------------------------'
	echo ' '
	cat $OCR_VAR_3
	echo ' '
	echo '---------------------------------------------------------'
	rm -f $OCR_VAR $OCR_VAR_3
}

## iTerm2 tab color commands
## http://code.google.com/p/iterm2/wiki/ProprietaryEscapeCodes
if [[ -n "$ITERM_SESSION_ID" ]]; then
    tab-color() {
        echo -ne "\033]6;1;bg;red;brightness;$1\a"
        echo -ne "\033]6;1;bg;green;brightness;$2\a"
        echo -ne "\033]6;1;bg;blue;brightness;$3\a"
    }
    tab-red() { tab-color 255 0 0 }
    tab-green() { tab-color 0 255 0 }
    tab-blue() { tab-color 0 0 255 }
    tab-reset() { echo -ne "\033]6;1;bg;*;default\a" }

    function iterm2_tab_precmd() {
        tab-reset
    }

    function iterm2_tab_preexec() {
        if [[ "$1" =~ "^ssh " ]]; then
            if [[ "$1" =~ "prod" ]]; then
                tab-color 255 160 160
            else
                tab-color 160 255 160
            fi
        else
            tab-color 160 160 255
        fi
    }

    autoload -U add-zsh-hook
    add-zsh-hook precmd  iterm2_tab_precmd
    add-zsh-hook preexec iterm2_tab_preexec
fi

## return my IP address
function myip() {
    ifconfig lo0 | grep 'inet '  | sed -e 's/:/ /' | awk '{print "lo0       : " $2}'
    ifconfig en0 | grep 'inet '  | sed -e 's/:/ /' | awk '{print "en0 (IPv4): " $2 " " $3 " " $4 " " $5 " " $6}'
    ifconfig en0 | grep 'inet6 ' | sed -e 's/ / /' | awk '{print "en0 (IPv6): " $2 " " $3 " " $4 " " $5 " " $6}'
    ifconfig en1 | grep 'inet '  | sed -e 's/:/ /' | awk '{print "en1 (IPv4): " $2 " " $3 " " $4 " " $5 " " $6}'
    ifconfig en1 | grep 'inet6 ' | sed -e 's/ / /' | awk '{print "en1 (IPv6): " $2 " " $3 " " $4 " " $5 " " $6}'
}
 
## Change directory to the current Finder directory
cdf() {
    target=`osascript -e 'tell application "Finder" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)'`
    if [ "$target" != "" ]; then
        cd "$target"; pwd
    else
        echo 'No Finder window found' >&2
    fi
}
